//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.10.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using test.Dal.HelperClasses;
using test.Dal.FactoryClasses;
using test.Dal.RelationClasses;
using SD.LLBLGen.Pro.ORMSupportClasses;

namespace test.Dal.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END

	/// <summary>Entity class which represents the entity 'Test'.<br/><br/></summary>
	[Serializable]
	public partial class TestEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END
	
	{
		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END

		private static TestEntityStaticMetaData _staticMetaData = new TestEntityStaticMetaData();
		private static TestRelations _relationsFactory = new TestRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class TestEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public TestEntityStaticMetaData()
			{
				SetEntityCoreInfo("TestEntity", InheritanceHierarchyType.None, false, (int)test.Dal.EntityType.TestEntity, typeof(TestEntity), typeof(TestEntityFactory), false);
			}
		}

		/// <summary>Static ctor</summary>
		static TestEntity()
		{
		}

		/// <summary> CTor</summary>
		public TestEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public TestEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this TestEntity</param>
		public TestEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Test which data should be fetched into this Test object</param>
		public TestEntity(System.String id) : this(id, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="id">PK value for Test which data should be fetched into this Test object</param>
		/// <param name="validator">The custom validator object for this TestEntity</param>
		public TestEntity(System.String id, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.Id = id;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected TestEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this TestEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END


			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static TestRelations Relations { get { return _relationsFactory; } }

		/// <summary>The Id property of the Entity Test<br/><br/></summary>
		/// <remarks>Mapped on  table field: "test"."id".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.String Id
		{
			get { return (System.String)GetValue((int)TestFieldIndex.Id, true); }
			set	{ SetValue((int)TestFieldIndex.Id, value); }
		}

		/// <summary>The Ma property of the Entity Test<br/><br/></summary>
		/// <remarks>Mapped on  table field: "test"."ma".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 50.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Ma
		{
			get { return (System.String)GetValue((int)TestFieldIndex.Ma, true); }
			set	{ SetValue((int)TestFieldIndex.Ma, value); }
		}

		/// <summary>The Soluong property of the Entity Test<br/><br/></summary>
		/// <remarks>Mapped on  table field: "test"."soluong".<br/>Table field type characteristics (type, precision, scale, length): Numeric, 10, 2, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual Nullable<System.Decimal> Soluong
		{
			get { return (Nullable<System.Decimal>)GetValue((int)TestFieldIndex.Soluong, false); }
			set	{ SetValue((int)TestFieldIndex.Soluong, value); }
		}

		/// <summary>The Ten property of the Entity Test<br/><br/></summary>
		/// <remarks>Mapped on  table field: "test"."ten".<br/>Table field type characteristics (type, precision, scale, length): Varchar, 0, 0, 200.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String Ten
		{
			get { return (System.String)GetValue((int)TestFieldIndex.Ten, true); }
			set	{ SetValue((int)TestFieldIndex.Ten, value); }
		}
		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END


	}
}

namespace test.Dal
{
	public enum TestFieldIndex
	{
		///<summary>Id. </summary>
		Id,
		///<summary>Ma. </summary>
		Ma,
		///<summary>Soluong. </summary>
		Soluong,
		///<summary>Ten. </summary>
		Ten,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace test.Dal.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: Test. </summary>
	public partial class TestRelations: RelationFactory
	{

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticTestRelations
	{

		/// <summary>CTor</summary>
		static StaticTestRelations() { }
	}
}
